// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/generators/model/interfaces.go

// Package model is a generated GoMock package.
package model

import (
	reflect "reflect"

	parser "github.com/SGNL-ai/fabricator/pkg/parser"
	gomock "github.com/golang/mock/gomock"
)

// MockGraphInterface is a mock of GraphInterface interface.
type MockGraphInterface struct {
	ctrl     *gomock.Controller
	recorder *MockGraphInterfaceMockRecorder
}

// MockGraphInterfaceMockRecorder is the mock recorder for MockGraphInterface.
type MockGraphInterfaceMockRecorder struct {
	mock *MockGraphInterface
}

// NewMockGraphInterface creates a new mock instance.
func NewMockGraphInterface(ctrl *gomock.Controller) *MockGraphInterface {
	mock := &MockGraphInterface{ctrl: ctrl}
	mock.recorder = &MockGraphInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGraphInterface) EXPECT() *MockGraphInterfaceMockRecorder {
	return m.recorder
}

// GetAllEntities mocks base method.
func (m *MockGraphInterface) GetAllEntities() map[string]EntityInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllEntities")
	ret0, _ := ret[0].(map[string]EntityInterface)
	return ret0
}

// GetAllEntities indicates an expected call of GetAllEntities.
func (mr *MockGraphInterfaceMockRecorder) GetAllEntities() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllEntities", reflect.TypeOf((*MockGraphInterface)(nil).GetAllEntities))
}

// GetAllRelationships mocks base method.
func (m *MockGraphInterface) GetAllRelationships() []RelationshipInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllRelationships")
	ret0, _ := ret[0].([]RelationshipInterface)
	return ret0
}

// GetAllRelationships indicates an expected call of GetAllRelationships.
func (mr *MockGraphInterfaceMockRecorder) GetAllRelationships() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllRelationships", reflect.TypeOf((*MockGraphInterface)(nil).GetAllRelationships))
}

// GetEntitiesList mocks base method.
func (m *MockGraphInterface) GetEntitiesList() []EntityInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEntitiesList")
	ret0, _ := ret[0].([]EntityInterface)
	return ret0
}

// GetEntitiesList indicates an expected call of GetEntitiesList.
func (mr *MockGraphInterfaceMockRecorder) GetEntitiesList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntitiesList", reflect.TypeOf((*MockGraphInterface)(nil).GetEntitiesList))
}

// GetEntity mocks base method.
func (m *MockGraphInterface) GetEntity(id string) (EntityInterface, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEntity", id)
	ret0, _ := ret[0].(EntityInterface)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetEntity indicates an expected call of GetEntity.
func (mr *MockGraphInterfaceMockRecorder) GetEntity(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntity", reflect.TypeOf((*MockGraphInterface)(nil).GetEntity), id)
}

// GetRelationship mocks base method.
func (m *MockGraphInterface) GetRelationship(id string) (RelationshipInterface, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRelationship", id)
	ret0, _ := ret[0].(RelationshipInterface)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetRelationship indicates an expected call of GetRelationship.
func (mr *MockGraphInterfaceMockRecorder) GetRelationship(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRelationship", reflect.TypeOf((*MockGraphInterface)(nil).GetRelationship), id)
}

// GetRelationshipsForEntity mocks base method.
func (m *MockGraphInterface) GetRelationshipsForEntity(entityID string) []RelationshipInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRelationshipsForEntity", entityID)
	ret0, _ := ret[0].([]RelationshipInterface)
	return ret0
}

// GetRelationshipsForEntity indicates an expected call of GetRelationshipsForEntity.
func (mr *MockGraphInterfaceMockRecorder) GetRelationshipsForEntity(entityID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRelationshipsForEntity", reflect.TypeOf((*MockGraphInterface)(nil).GetRelationshipsForEntity), entityID)
}

// GetTopologicalOrder mocks base method.
func (m *MockGraphInterface) GetTopologicalOrder() ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTopologicalOrder")
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTopologicalOrder indicates an expected call of GetTopologicalOrder.
func (mr *MockGraphInterfaceMockRecorder) GetTopologicalOrder() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTopologicalOrder", reflect.TypeOf((*MockGraphInterface)(nil).GetTopologicalOrder))
}

// createEntitiesFromYAML mocks base method.
func (m *MockGraphInterface) createEntitiesFromYAML(yamlEntities map[string]parser.Entity) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "createEntitiesFromYAML", yamlEntities)
	ret0, _ := ret[0].(error)
	return ret0
}

// createEntitiesFromYAML indicates an expected call of createEntitiesFromYAML.
func (mr *MockGraphInterfaceMockRecorder) createEntitiesFromYAML(yamlEntities interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "createEntitiesFromYAML", reflect.TypeOf((*MockGraphInterface)(nil).createEntitiesFromYAML), yamlEntities)
}

// MockEntityInterface is a mock of EntityInterface interface.
type MockEntityInterface struct {
	ctrl     *gomock.Controller
	recorder *MockEntityInterfaceMockRecorder
}

// MockEntityInterfaceMockRecorder is the mock recorder for MockEntityInterface.
type MockEntityInterfaceMockRecorder struct {
	mock *MockEntityInterface
}

// NewMockEntityInterface creates a new mock instance.
func NewMockEntityInterface(ctrl *gomock.Controller) *MockEntityInterface {
	mock := &MockEntityInterface{ctrl: ctrl}
	mock.recorder = &MockEntityInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEntityInterface) EXPECT() *MockEntityInterfaceMockRecorder {
	return m.recorder
}

// AddRow mocks base method.
func (m *MockEntityInterface) AddRow(row *Row) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddRow", row)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddRow indicates an expected call of AddRow.
func (mr *MockEntityInterfaceMockRecorder) AddRow(row interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddRow", reflect.TypeOf((*MockEntityInterface)(nil).AddRow), row)
}

// ForEachRow mocks base method.
func (m *MockEntityInterface) ForEachRow(fn func(*Row) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ForEachRow", fn)
	ret0, _ := ret[0].(error)
	return ret0
}

// ForEachRow indicates an expected call of ForEachRow.
func (mr *MockEntityInterfaceMockRecorder) ForEachRow(fn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ForEachRow", reflect.TypeOf((*MockEntityInterface)(nil).ForEachRow), fn)
}

// GetAttribute mocks base method.
func (m *MockEntityInterface) GetAttribute(name string) (AttributeInterface, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAttribute", name)
	ret0, _ := ret[0].(AttributeInterface)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetAttribute indicates an expected call of GetAttribute.
func (mr *MockEntityInterfaceMockRecorder) GetAttribute(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAttribute", reflect.TypeOf((*MockEntityInterface)(nil).GetAttribute), name)
}

// GetAttributeByExternalID mocks base method.
func (m *MockEntityInterface) GetAttributeByExternalID(externalID string) (AttributeInterface, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAttributeByExternalID", externalID)
	ret0, _ := ret[0].(AttributeInterface)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetAttributeByExternalID indicates an expected call of GetAttributeByExternalID.
func (mr *MockEntityInterfaceMockRecorder) GetAttributeByExternalID(externalID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAttributeByExternalID", reflect.TypeOf((*MockEntityInterface)(nil).GetAttributeByExternalID), externalID)
}

// GetAttributes mocks base method.
func (m *MockEntityInterface) GetAttributes() []AttributeInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAttributes")
	ret0, _ := ret[0].([]AttributeInterface)
	return ret0
}

// GetAttributes indicates an expected call of GetAttributes.
func (mr *MockEntityInterfaceMockRecorder) GetAttributes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAttributes", reflect.TypeOf((*MockEntityInterface)(nil).GetAttributes))
}

// GetDescription mocks base method.
func (m *MockEntityInterface) GetDescription() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDescription")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetDescription indicates an expected call of GetDescription.
func (mr *MockEntityInterfaceMockRecorder) GetDescription() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDescription", reflect.TypeOf((*MockEntityInterface)(nil).GetDescription))
}

// GetExternalID mocks base method.
func (m *MockEntityInterface) GetExternalID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExternalID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetExternalID indicates an expected call of GetExternalID.
func (mr *MockEntityInterfaceMockRecorder) GetExternalID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExternalID", reflect.TypeOf((*MockEntityInterface)(nil).GetExternalID))
}

// GetID mocks base method.
func (m *MockEntityInterface) GetID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetID indicates an expected call of GetID.
func (mr *MockEntityInterfaceMockRecorder) GetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockEntityInterface)(nil).GetID))
}

// GetName mocks base method.
func (m *MockEntityInterface) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockEntityInterfaceMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockEntityInterface)(nil).GetName))
}

// GetNonRelationshipAttributes mocks base method.
func (m *MockEntityInterface) GetNonRelationshipAttributes() []AttributeInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNonRelationshipAttributes")
	ret0, _ := ret[0].([]AttributeInterface)
	return ret0
}

// GetNonRelationshipAttributes indicates an expected call of GetNonRelationshipAttributes.
func (mr *MockEntityInterfaceMockRecorder) GetNonRelationshipAttributes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNonRelationshipAttributes", reflect.TypeOf((*MockEntityInterface)(nil).GetNonRelationshipAttributes))
}

// GetNonUniqueAttributes mocks base method.
func (m *MockEntityInterface) GetNonUniqueAttributes() []AttributeInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNonUniqueAttributes")
	ret0, _ := ret[0].([]AttributeInterface)
	return ret0
}

// GetNonUniqueAttributes indicates an expected call of GetNonUniqueAttributes.
func (mr *MockEntityInterfaceMockRecorder) GetNonUniqueAttributes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNonUniqueAttributes", reflect.TypeOf((*MockEntityInterface)(nil).GetNonUniqueAttributes))
}

// GetPrimaryKey mocks base method.
func (m *MockEntityInterface) GetPrimaryKey() AttributeInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPrimaryKey")
	ret0, _ := ret[0].(AttributeInterface)
	return ret0
}

// GetPrimaryKey indicates an expected call of GetPrimaryKey.
func (mr *MockEntityInterfaceMockRecorder) GetPrimaryKey() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPrimaryKey", reflect.TypeOf((*MockEntityInterface)(nil).GetPrimaryKey))
}

// GetRelationshipAttributes mocks base method.
func (m *MockEntityInterface) GetRelationshipAttributes() []AttributeInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRelationshipAttributes")
	ret0, _ := ret[0].([]AttributeInterface)
	return ret0
}

// GetRelationshipAttributes indicates an expected call of GetRelationshipAttributes.
func (mr *MockEntityInterfaceMockRecorder) GetRelationshipAttributes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRelationshipAttributes", reflect.TypeOf((*MockEntityInterface)(nil).GetRelationshipAttributes))
}

// GetRowCount mocks base method.
func (m *MockEntityInterface) GetRowCount() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRowCount")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetRowCount indicates an expected call of GetRowCount.
func (mr *MockEntityInterfaceMockRecorder) GetRowCount() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRowCount", reflect.TypeOf((*MockEntityInterface)(nil).GetRowCount))
}

// ToCSV mocks base method.
func (m *MockEntityInterface) ToCSV() *CSVData {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ToCSV")
	ret0, _ := ret[0].(*CSVData)
	return ret0
}

// ToCSV indicates an expected call of ToCSV.
func (mr *MockEntityInterfaceMockRecorder) ToCSV() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ToCSV", reflect.TypeOf((*MockEntityInterface)(nil).ToCSV))
}

// ValidateAllForeignKeys mocks base method.
func (m *MockEntityInterface) ValidateAllForeignKeys() []string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateAllForeignKeys")
	ret0, _ := ret[0].([]string)
	return ret0
}

// ValidateAllForeignKeys indicates an expected call of ValidateAllForeignKeys.
func (mr *MockEntityInterfaceMockRecorder) ValidateAllForeignKeys() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateAllForeignKeys", reflect.TypeOf((*MockEntityInterface)(nil).ValidateAllForeignKeys))
}

// addRelationship mocks base method.
func (m *MockEntityInterface) addRelationship(relationshipID, relationshipName string, targetEntity EntityInterface, sourceExternalID, targetExternalID string) (RelationshipInterface, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "addRelationship", relationshipID, relationshipName, targetEntity, sourceExternalID, targetExternalID)
	ret0, _ := ret[0].(RelationshipInterface)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// addRelationship indicates an expected call of addRelationship.
func (mr *MockEntityInterfaceMockRecorder) addRelationship(relationshipID, relationshipName, targetEntity, sourceExternalID, targetExternalID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "addRelationship", reflect.TypeOf((*MockEntityInterface)(nil).addRelationship), relationshipID, relationshipName, targetEntity, sourceExternalID, targetExternalID)
}

// findAttributeByReference mocks base method.
func (m *MockEntityInterface) findAttributeByReference(reference string) (AttributeInterface, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "findAttributeByReference", reference)
	ret0, _ := ret[0].(AttributeInterface)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// findAttributeByReference indicates an expected call of findAttributeByReference.
func (mr *MockEntityInterfaceMockRecorder) findAttributeByReference(reference interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "findAttributeByReference", reflect.TypeOf((*MockEntityInterface)(nil).findAttributeByReference), reference)
}

// getRows mocks base method.
func (m *MockEntityInterface) getRows() []*Row {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "getRows")
	ret0, _ := ret[0].([]*Row)
	return ret0
}

// getRows indicates an expected call of getRows.
func (mr *MockEntityInterfaceMockRecorder) getRows() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getRows", reflect.TypeOf((*MockEntityInterface)(nil).getRows))
}

// validateForeignKeyValue mocks base method.
func (m *MockEntityInterface) validateForeignKeyValue(attributeName, value string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "validateForeignKeyValue", attributeName, value)
	ret0, _ := ret[0].(error)
	return ret0
}

// validateForeignKeyValue indicates an expected call of validateForeignKeyValue.
func (mr *MockEntityInterfaceMockRecorder) validateForeignKeyValue(attributeName, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "validateForeignKeyValue", reflect.TypeOf((*MockEntityInterface)(nil).validateForeignKeyValue), attributeName, value)
}

// MockRelationshipInterface is a mock of RelationshipInterface interface.
type MockRelationshipInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRelationshipInterfaceMockRecorder
}

// MockRelationshipInterfaceMockRecorder is the mock recorder for MockRelationshipInterface.
type MockRelationshipInterfaceMockRecorder struct {
	mock *MockRelationshipInterface
}

// NewMockRelationshipInterface creates a new mock instance.
func NewMockRelationshipInterface(ctrl *gomock.Controller) *MockRelationshipInterface {
	mock := &MockRelationshipInterface{ctrl: ctrl}
	mock.recorder = &MockRelationshipInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRelationshipInterface) EXPECT() *MockRelationshipInterfaceMockRecorder {
	return m.recorder
}

// GetCardinality mocks base method.
func (m *MockRelationshipInterface) GetCardinality() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCardinality")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCardinality indicates an expected call of GetCardinality.
func (mr *MockRelationshipInterfaceMockRecorder) GetCardinality() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCardinality", reflect.TypeOf((*MockRelationshipInterface)(nil).GetCardinality))
}

// GetID mocks base method.
func (m *MockRelationshipInterface) GetID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetID indicates an expected call of GetID.
func (mr *MockRelationshipInterfaceMockRecorder) GetID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetID", reflect.TypeOf((*MockRelationshipInterface)(nil).GetID))
}

// GetName mocks base method.
func (m *MockRelationshipInterface) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockRelationshipInterfaceMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockRelationshipInterface)(nil).GetName))
}

// GetSourceAttribute mocks base method.
func (m *MockRelationshipInterface) GetSourceAttribute() AttributeInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSourceAttribute")
	ret0, _ := ret[0].(AttributeInterface)
	return ret0
}

// GetSourceAttribute indicates an expected call of GetSourceAttribute.
func (mr *MockRelationshipInterfaceMockRecorder) GetSourceAttribute() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSourceAttribute", reflect.TypeOf((*MockRelationshipInterface)(nil).GetSourceAttribute))
}

// GetSourceEntity mocks base method.
func (m *MockRelationshipInterface) GetSourceEntity() EntityInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSourceEntity")
	ret0, _ := ret[0].(EntityInterface)
	return ret0
}

// GetSourceEntity indicates an expected call of GetSourceEntity.
func (mr *MockRelationshipInterfaceMockRecorder) GetSourceEntity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSourceEntity", reflect.TypeOf((*MockRelationshipInterface)(nil).GetSourceEntity))
}

// GetTargetAttribute mocks base method.
func (m *MockRelationshipInterface) GetTargetAttribute() AttributeInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTargetAttribute")
	ret0, _ := ret[0].(AttributeInterface)
	return ret0
}

// GetTargetAttribute indicates an expected call of GetTargetAttribute.
func (mr *MockRelationshipInterfaceMockRecorder) GetTargetAttribute() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTargetAttribute", reflect.TypeOf((*MockRelationshipInterface)(nil).GetTargetAttribute))
}

// GetTargetEntity mocks base method.
func (m *MockRelationshipInterface) GetTargetEntity() EntityInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTargetEntity")
	ret0, _ := ret[0].(EntityInterface)
	return ret0
}

// GetTargetEntity indicates an expected call of GetTargetEntity.
func (mr *MockRelationshipInterfaceMockRecorder) GetTargetEntity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTargetEntity", reflect.TypeOf((*MockRelationshipInterface)(nil).GetTargetEntity))
}

// IsManyToOne mocks base method.
func (m *MockRelationshipInterface) IsManyToOne() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsManyToOne")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsManyToOne indicates an expected call of IsManyToOne.
func (mr *MockRelationshipInterfaceMockRecorder) IsManyToOne() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsManyToOne", reflect.TypeOf((*MockRelationshipInterface)(nil).IsManyToOne))
}

// IsOneToMany mocks base method.
func (m *MockRelationshipInterface) IsOneToMany() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsOneToMany")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsOneToMany indicates an expected call of IsOneToMany.
func (mr *MockRelationshipInterfaceMockRecorder) IsOneToMany() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsOneToMany", reflect.TypeOf((*MockRelationshipInterface)(nil).IsOneToMany))
}

// IsOneToOne mocks base method.
func (m *MockRelationshipInterface) IsOneToOne() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsOneToOne")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsOneToOne indicates an expected call of IsOneToOne.
func (mr *MockRelationshipInterfaceMockRecorder) IsOneToOne() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsOneToOne", reflect.TypeOf((*MockRelationshipInterface)(nil).IsOneToOne))
}

// MockAttributeInterface is a mock of AttributeInterface interface.
type MockAttributeInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAttributeInterfaceMockRecorder
}

// MockAttributeInterfaceMockRecorder is the mock recorder for MockAttributeInterface.
type MockAttributeInterfaceMockRecorder struct {
	mock *MockAttributeInterface
}

// NewMockAttributeInterface creates a new mock instance.
func NewMockAttributeInterface(ctrl *gomock.Controller) *MockAttributeInterface {
	mock := &MockAttributeInterface{ctrl: ctrl}
	mock.recorder = &MockAttributeInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAttributeInterface) EXPECT() *MockAttributeInterfaceMockRecorder {
	return m.recorder
}

// GetAttributeAlias mocks base method.
func (m *MockAttributeInterface) GetAttributeAlias() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAttributeAlias")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetAttributeAlias indicates an expected call of GetAttributeAlias.
func (mr *MockAttributeInterfaceMockRecorder) GetAttributeAlias() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAttributeAlias", reflect.TypeOf((*MockAttributeInterface)(nil).GetAttributeAlias))
}

// GetDataType mocks base method.
func (m *MockAttributeInterface) GetDataType() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDataType")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetDataType indicates an expected call of GetDataType.
func (mr *MockAttributeInterfaceMockRecorder) GetDataType() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDataType", reflect.TypeOf((*MockAttributeInterface)(nil).GetDataType))
}

// GetExternalID mocks base method.
func (m *MockAttributeInterface) GetExternalID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExternalID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetExternalID indicates an expected call of GetExternalID.
func (mr *MockAttributeInterfaceMockRecorder) GetExternalID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExternalID", reflect.TypeOf((*MockAttributeInterface)(nil).GetExternalID))
}

// GetName mocks base method.
func (m *MockAttributeInterface) GetName() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetName")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetName indicates an expected call of GetName.
func (mr *MockAttributeInterfaceMockRecorder) GetName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetName", reflect.TypeOf((*MockAttributeInterface)(nil).GetName))
}

// GetParentEntity mocks base method.
func (m *MockAttributeInterface) GetParentEntity() EntityInterface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetParentEntity")
	ret0, _ := ret[0].(EntityInterface)
	return ret0
}

// GetParentEntity indicates an expected call of GetParentEntity.
func (mr *MockAttributeInterfaceMockRecorder) GetParentEntity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetParentEntity", reflect.TypeOf((*MockAttributeInterface)(nil).GetParentEntity))
}

// GetRelatedAttribute mocks base method.
func (m *MockAttributeInterface) GetRelatedAttribute() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRelatedAttribute")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRelatedAttribute indicates an expected call of GetRelatedAttribute.
func (mr *MockAttributeInterfaceMockRecorder) GetRelatedAttribute() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRelatedAttribute", reflect.TypeOf((*MockAttributeInterface)(nil).GetRelatedAttribute))
}

// GetRelatedEntityID mocks base method.
func (m *MockAttributeInterface) GetRelatedEntityID() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRelatedEntityID")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetRelatedEntityID indicates an expected call of GetRelatedEntityID.
func (mr *MockAttributeInterfaceMockRecorder) GetRelatedEntityID() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRelatedEntityID", reflect.TypeOf((*MockAttributeInterface)(nil).GetRelatedEntityID))
}

// IsRelationship mocks base method.
func (m *MockAttributeInterface) IsRelationship() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsRelationship")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsRelationship indicates an expected call of IsRelationship.
func (mr *MockAttributeInterfaceMockRecorder) IsRelationship() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsRelationship", reflect.TypeOf((*MockAttributeInterface)(nil).IsRelationship))
}

// IsUnique mocks base method.
func (m *MockAttributeInterface) IsUnique() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsUnique")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsUnique indicates an expected call of IsUnique.
func (mr *MockAttributeInterfaceMockRecorder) IsUnique() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsUnique", reflect.TypeOf((*MockAttributeInterface)(nil).IsUnique))
}

// setParentEntity mocks base method.
func (m *MockAttributeInterface) setParentEntity(entity EntityInterface) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "setParentEntity", entity)
}

// setParentEntity indicates an expected call of setParentEntity.
func (mr *MockAttributeInterfaceMockRecorder) setParentEntity(entity interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "setParentEntity", reflect.TypeOf((*MockAttributeInterface)(nil).setParentEntity), entity)
}

// setRelationship mocks base method.
func (m *MockAttributeInterface) setRelationship(relatedEntityID, relatedAttributeName string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "setRelationship", relatedEntityID, relatedAttributeName)
}

// setRelationship indicates an expected call of setRelationship.
func (mr *MockAttributeInterfaceMockRecorder) setRelationship(relatedEntityID, relatedAttributeName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "setRelationship", reflect.TypeOf((*MockAttributeInterface)(nil).setRelationship), relatedEntityID, relatedAttributeName)
}
