name: Security Scanning

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly security scans
    - cron: '0 0 * * 0'

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  security:
    name: Security Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'
        check-latest: true

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: '-fmt sarif -out gosec.sarif ./...'

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: gosec.sarif
      if: always()

    - name: Run govulncheck
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

    - name: Check for known vulnerabilities in dependencies
      run: |
        go list -json -deps ./... | jq -r '.Module | select(.Path != null and .Version != null) | "\(.Path)@\(.Version)"' | sort -u > deps.txt
        echo "Dependencies to check:"
        cat deps.txt
        # This would integrate with Snyk or similar in a real setup